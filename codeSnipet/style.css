body, html {
    margin: 0;
    padding: 0;
    height: 100%;
    font-family: sans-serif;
    background-color: #f0f0f0;
    overflow: hidden; /* 데스크탑: 전체 페이지 스크롤 방지 */
}

.container { /* ID: main-container */
    display: flex;
    flex-direction: column;
    height: 100vh;
    width: 100vw;
    box-sizing: border-box;
}

.main-content-wrapper {
    display: flex;
    flex-grow: 1;
    overflow: hidden;
    width: 100%;
}

.editor-pane { /* ID: editor-area */
    display: flex;
    flex-direction: column;
    background-color: #282c34;
    color: #abb2bf;
    overflow: hidden;
    /* 너비는 script.js의 Split(['#editor-area', '#preview-area']) sizes 옵션으로 제어 */
}

.preview-pane { /* ID: preview-area */
    background-color: #fff;
    overflow: hidden;
    display: flex;
    flex-direction: column;
    /* 너비는 script.js의 Split(['#editor-area', '#preview-area']) sizes 옵션으로 제어 */
}

#preview-frame {
    flex-grow: 1;
    width: 100%;
    border: none;
}

.gutter {
    background-color: #4f5b66;
    background-repeat: no-repeat;
    background-position: 50%;
    z-index: 10;
    box-sizing: border-box;
}
.gutter.gutter-horizontal { cursor: col-resize; }
.gutter.gutter-vertical { cursor: row-resize; }

.code-section {
    display: flex;
    flex-direction: column;
    overflow: hidden;
    min-height: 0;
}
.code-section label {
    padding: 6px 10px;
    background-color: #3a3f4b;
    font-weight: bold;
    flex-shrink: 0;
    font-size: 13px;
    border-bottom: 1px solid #4f5b66;
}
.CodeMirror {
    flex-grow: 1;
    border: none;
    min-height: 0;
}

#run-button {
    padding: 10px 15px;
    background-color: #61afef;
    color: white;
    border: none;
    cursor: pointer;
    font-size: 16px;
    margin: 8px;
    border-radius: 4px;
    flex-shrink: 0;
}
#run-button:hover {
    background-color: #528baf;
}

#web-terminal-container {
    width: 100%;
    height: 150px; /* 데스크탑 터미널 높이 */
    flex-shrink: 0;
    background-color: #1e1e1e;
    color: #cccccc;
    border-top: 2px solid #4f5b66;
    padding: 10px;
    box-sizing: border-box;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}
#web-terminal-container h2 {
    margin-top: 0; margin-bottom: 8px; font-size: 1.0em; color: #00aaff;
    padding-bottom: 5px; border-bottom: 1px solid #333; flex-shrink: 0;
}
#web-terminal {
    flex-grow: 1; overflow-y: auto; font-family: 'Consolas', 'Monaco', 'Lucida Console', monospace;
    font-size: 0.85em; line-height: 1.3; background-color: #161616; padding: 5px; border-radius: 3px;
}
.terminal-output p {
    margin: 0 0 3px 0; white-space: pre-wrap; word-break: break-all;
}

.automation-script-viewer {
    width: 100%;
    background-color: #282c34;
    color: #abb2bf;
    border-top: 2px solid #4f5b66;
    padding: 0;
    box-sizing: border-box;
    flex-shrink: 0;
    display: flex;
    flex-direction: column;
    overflow: hidden;
}
.automation-script-viewer h3 {
    padding: 8px 10px; background-color: #3a3f4b; margin: 0; font-size: 1.0em;
    flex-shrink: 0; border-bottom: 1px solid #4f5b66;
}
.automation-script-viewer .CodeMirror {
    flex-grow: 1; border: none; font-size: 0.85em; min-height: 70px;
}

.CodeMirror { /* 모든 CodeMirror 인스턴스에 적용 */
    flex-grow: 1;
    border: none;
    min-height: 0; /* 부모 flex 아이템으로서 줄어들 수 있도록 */
    /* CodeMirror 자체적으로 내부 스크롤을 처리하므로,
       이 요소에 직접 overflow를 설정할 필요는 보통 없습니다.
       만약 문제가 있다면 다음을 시도해볼 수 있지만, 권장되지는 않습니다.
       overflow: hidden; /* CodeMirror 내부 스크롤러가 처리하도록 */
}

/* CodeMirror 내부 스크롤 요소에 대한 명시적 스타일 (보통 불필요) */
/* 이 부분은 CodeMirror 기본 CSS가 이미 잘 처리해주므로,
   문제가 있을 때만 디버깅용으로 확인하거나 오버라이드합니다. */
.CodeMirror-scroll {
    overflow: auto !important; /* 내용이 넘칠 경우 스크롤바 자동 생성 (세로 및 가로) */
    /* 또는 overflow-y: auto !important; 만약 세로 스크롤만 확실히 하고 싶다면 */
    height: 100%; /* 부모(.CodeMirror)의 높이를 채우도록 */
}
/* 모바일 화면 (768px 이하) */
@media (max-width: 768px) {
    body, html {
        overflow-y: auto;
    }
    .container {
        height: auto;
        min-height: 100vh;
    }

    .main-content-wrapper {
        flex-direction: column;
        flex-grow: 0;
        height: auto;
        order: 1;
    }

    .editor-pane { /* 코드 스니펫 영역 전체 */
        width: 100%;
        /* min-height: 45vh; */ /* 이전 값 */
        height: auto; /* 내부 요소들의 높이에 따라 결정되도록 */
        display: flex;
        flex-direction: column;
        order: 1;
    }

    .code-section { /* HTML, CSS, JS 각 섹션 */
        /* flex-grow: 1; */ /* 이 부분을 잠시 제거하고 각 CodeMirror에 직접 높이를 줘봅니다. */
        min-height: 0; /* 유지 */
        display: flex;
        flex-direction: column;
        /* 각 코드 섹션이 최소한의 높이를 갖도록 합니다. */
        /* 예를 들어, 레이블 + CodeMirror 최소 높이 */
        /* height: auto; */ /* 자식 요소인 CodeMirror의 높이에 따르도록 */
    }
    .code-section label {
        flex-shrink: 0; /* 스타일 유지 */
    }

    .CodeMirror { /* 각 에디터 내부 (HTML, CSS, JS) */
        /* min-height: 100px; */ /* 이전 값 */
        height: 50px; /* 중요: 고정된 픽셀 높이를 명시적으로 설정 (약 5-6줄 분량) */
                       /* 이 값을 조절하여 원하는 줄 수를 맞추세요. */
        /* flex-grow: 1; */ /* 고정 높이를 주므로 flex-grow는 일단 제거 */
        /* CodeMirror는 내부적으로 overflow:auto를 가짐 */
    }
    /* 특정 에디터만 다르게 하고 싶다면 ID 사용 */
    /* #html-panel .CodeMirror { height: 120px; } */
    /* #css-panel .CodeMirror { height: 100px; } */
    /* #js-panel .CodeMirror { height: 150px; } */


    #run-button {
        width: calc(100% - 16px);
        margin: 8px;
        flex-shrink: 0;
    }

    .preview-pane { /* 실행 화면 */
        width: 100%;
        min-height: 50vh; /* 최소 높이 유지 */
        height: auto;
        border-top: 2px solid #ddd;
        order: 2;
    }

    #web-terminal-container { /* 아웃풋 */
        width: 100%;
        min-height: 30vh; /* 최소 높이 유지 */
        height: auto;
        margin-top: 0;
        border-top: 2px solid #4f5b66;
        order: 2; /* .container 내에서 main-content-wrapper 다음 (HTML 구조에 따름) */
                  /* 만약 preview-pane 다음에 오게 하려면 preview-pane order를 2, 터미널 order를 3으로 */
    }

    .gutter {
        display: none !important;
    }

    .automation-script-viewer {
        display: none;
    }
}